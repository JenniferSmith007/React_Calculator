[{"/Users/jennifersmith/HomeFolder/tkh_assignments/REACT/React_Calculator/calculator/src/App.js":"1","/Users/jennifersmith/HomeFolder/tkh_assignments/REACT/React_Calculator/calculator/src/index.js":"2","/Users/jennifersmith/HomeFolder/tkh_assignments/REACT/React_Calculator/calculator/src/components/Calculator.js":"3"},{"size":185,"mtime":1611544752535,"results":"4","hashOfConfig":"5"},{"size":219,"mtime":1611458004941,"results":"6","hashOfConfig":"5"},{"size":1807,"mtime":1611642249423,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ewzjhk",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/jennifersmith/HomeFolder/tkh_assignments/REACT/React_Calculator/calculator/src/App.js",[],"/Users/jennifersmith/HomeFolder/tkh_assignments/REACT/React_Calculator/calculator/src/index.js",[],"/Users/jennifersmith/HomeFolder/tkh_assignments/REACT/React_Calculator/calculator/src/components/Calculator.js",["15"],"import { useState, useEffect } from \"react\";\n\nfunction Calculator() {\n  const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const oper = [\"+\", \"-\", \"*\", \"/\"];\n  const [firstNum, setFirstNum] = useState(\"\");\n  const [secNum, setSecNum] = useState(\"\");\n  const [op, setOp] = useState(\"\");\n  const [res, setRes] = useState(0);\n  useEffect(() => {\n    console.log([res]);\n  }, [res]);\n\n  function clickNum(val) {\n    if (op === \"\") {\n      setFirstNum(firstNum + val);\n    } else {\n      setSecNum(secNum + val);\n    }\n  }\n  function ClickOp(val) {\n    setOp(val);\n  }\n  function calcOp() {\n    //using switch to check for each operation that is being used\n    switch (op) {\n      case \"+\":\n        setRes(Number(firstNum) + Number(secNum));\n        break;\n      case \"-\":\n        setRes(Number(firstNum) - Number(secNum));\n        break;\n      case \"*\":\n        setRes(Number(firstNum) * Number(secNum));\n        break;\n\n      case \"/\":\n        setRes(Number(firstNum) / Number(secNum));\n        break;\n    }\n  }\n  return (\n    <div className=\"wrap\">\n      <div className=\"display\">{res}</div>\n      <div className=\"buttons\">\n        <div className=\"left\">\n          <div className=\"seeRes\" onClick={calcOp}>\n            Results\n          </div>\n\n          <div className=\"nums\">\n            {nums.map((val, key) => {\n              return (\n                <div className=\"indNum\" onClick={() => clickNum(val)}>\n                  {val}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"right\">\n          {oper.map((val, key) => {\n            return (\n              <div id=\"oper\" onClick={() => ClickOp(val)}>\n                {val}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;\n",{"ruleId":"16","severity":1,"message":"17","line":26,"column":5,"nodeType":"18","messageId":"19","endLine":40,"endColumn":6},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]